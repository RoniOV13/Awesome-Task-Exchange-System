version: "3.8"

networks:
  webnet:
    driver: bridge

services:
  mongodb:
    image: docker.io/bitnami/mongodb:5.0
    ports:
      - "27017:27017"
    volumes:
      - 'mongodb_data:/bitnami/mongodb'

  zookeeper:
    image: docker.io/bitnami/zookeeper:3.8
    ports:
      - "2181:2181"
    volumes:
      - "zookeeper_data:/bitnami"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes
  kafka:
    image: docker.io/bitnami/kafka:3.2
    ports:
      - "9092:9092"
    volumes:
      - "kafka_data:/bitnami"
    environment:
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
      - ALLOW_PLAINTEXT_LISTENER=yes
    depends_on:
      - zookeeper

  task:
    build:
      context: ./apps/task/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: "development"
      PORT: 3000
    volumes:
      - ./apps/task/:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - kafka
      - mongodb
    ports:
      - 3000:3000
    command: npm run start

  auth:
    build:
      context: ./apps/auth/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: "development"
      PORT: 3001
    volumes:
      - ./apps/auth/:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - kafka
      - mongodb
    ports:
      - 3001:3001
    command: npm run start

  analytics:
    build:
      context: ./apps/analytics/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: "development"
      PORT: 3003
    volumes:
      - ./apps/analytics/:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - kafka
      - mongodb
    ports:
      - 3003:3003
    command: npm run start

  accouting:
    build:
      context: ./apps/accouting/
      dockerfile: Dockerfile
    environment:
      NODE_ENV: "development"
      PORT: 3002
    volumes:
      - ./apps/accouting/:/app
      - /app/node_modules
      - /app/dist
    depends_on:
      - kafka
      - mongodb
    ports:
      - 3002:3002
    command: npm run start

volumes:
  mongodb_data:
    driver: local
  zookeeper_data:
    driver: local
  kafka_data:
    driver: local